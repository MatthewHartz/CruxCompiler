ast.DeclarationList(3,1)
  ast.FunctionDefinition(3,1)[Symbol(compareInt:bool), [Symbol(a:int), Symbol(b:int)]]
    ast.StatementList(4,3)
      ast.Return(4,3)
        ast.Comparison(4,12)[GT]
          ast.Dereference(4,10)
            ast.AddressOf(4,10)[a]
          ast.Dereference(4,14)
            ast.AddressOf(4,14)[b]
  ast.FunctionDefinition(7,1)[Symbol(compareFloat:bool), [Symbol(a:float), Symbol(b:float)]]
    ast.StatementList(8,3)
      ast.Return(8,3)
        ast.Comparison(8,12)[GT]
          ast.Dereference(8,10)
            ast.AddressOf(8,10)[a]
          ast.Dereference(8,14)
            ast.AddressOf(8,14)[b]
  ast.FunctionDefinition(11,1)[Symbol(compareBool:bool), [Symbol(a:bool), Symbol(b:bool)]]
    ast.StatementList(12,3)
      ast.Return(12,3)
        ast.Comparison(12,12)[GT]
          ast.Dereference(12,10)
            ast.AddressOf(12,10)[a]
          ast.Dereference(12,14)
            ast.AddressOf(12,14)[b]
  ast.FunctionDefinition(15,1)[Symbol(compareIntFloat:bool), [Symbol(a:int), Symbol(b:float)]]
    ast.StatementList(16,3)
      ast.Return(16,3)
        ast.Comparison(16,12)[GT]
          ast.Dereference(16,10)
            ast.AddressOf(16,10)[a]
          ast.Dereference(16,14)
            ast.AddressOf(16,14)[b]
  ast.FunctionDefinition(19,1)[Symbol(main:void), []]
    ast.StatementList(20,3)
      ast.Call(20,3)[Symbol(printBool:void)]
        ast.ExpressionList(20,15)
          ast.LiteralBool(20,15)[FALSE]

